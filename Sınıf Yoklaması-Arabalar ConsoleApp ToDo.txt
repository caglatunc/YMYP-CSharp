Sınıf Yoklaması ConsoleApp
1.Öğrenci listesi olsun (List<Ogrenci> ogrenciListesi = new List<Ogrenci>();  ogrenciListesi.Add(new Ogrenci() { OgrenciAdi = "Hilal", SiniftaMi = false })

2. Konsolun alabileceği komutlar;

Öğrenci Listesi
Yoklama Al
Gelmeyen Öğrenci Listesi
Çıkış

3.Yoklamada öğrenci numarası istesin. (o numaraya ait ögrencinin SiniftaMi durumunu true yapın, olmayan çğrenci listesinide SiniftaMi kısmı falsedan bulabilirsiniz)

ogrenci = ogrenciler.Where(p=>p.OgrenciNumarasi ==1).FirstOrDefaul();
ogrenci.SiniftaMi=true;

List<Ogrenci>siniftaOlmayanlar = ogrenciler.Where(p=>p.OgrenciNumarasi == false).ToList();

for ile sınıfta olmayanları döndürüp ekrana bas.


OgrenciAdi
OgrenciNumarasi
SiniftaMi


öğrenci eklemek için  benden 3 tane istenen maddeleri elde etim. Artık bana öğrenci lazım.

				Ogrenci ogrenci   = new( );   // Sınıfı new^leyerek nesneye dönüştürüp bunun instansını oluşturmuş oluyoruz.
				Ogrenci ogrenciAdi   =  ogrenciAdi;
				Ogrenci ogrenciNumarasi = ogrenciNumarasi;
				Ogrenci Model siniftaMi= siniftaMi;



_________

ArabalarConsoleApp

Mevcut bir araba seçin, kiralama işlemi yaptırın.

1.Eğer araç kiralaysa; 

//öncelikle araç seçmemizi istesin.

else if(cevap.ToLower() == "Araç Kirala".ToLower())
            {
                Console.WriteLine("Araç seçimi yapın");

//araç seçimi için bana araçların listesini geirsin .Onuda for döngüsüyle sağlayalım.
		 for(int x=0; x < cars.Count(); x++)
		{
			//aracın bilgileini konsolda yazdıracağım.
		}


            }
EKLEME YAP KENDİNİ ZORLA:
tarihi ve saati kontrol etirmeye çalış
Chatgpt ye sor.

Kiralama tarihini, tarih formatında kontrol etmek istiyorum.
Aynı zamanda da bugünden geriye dönuk kiralama ıslemı yapırmak ıstemıyorum. Tarihin geçmiş döneme ait olmaması da lazım.

Kiralama saainin, şimdiki saaten en erken 1 saat sonra yapılambilmesi gerektiği gibi şartlar ekle.

GIF yapabilirsiniz.

namespace _12.SınıfYoklamasi
{
    internal class Program
    {
        static void Main(string[] args)
        {


            List<Ogrenci> ogrenciListesi = new List<Ogrenci>();

            ogrenciListesi.Add(new Ogrenci() { OgrenciAdi = "Cagla", OgrenciSoyadi = "Tunc", OgrenciNumarasi = 5000, SiniftaMi = false });
            ogrenciListesi.Add(new Ogrenci() { OgrenciAdi = "Ercan", OgrenciSoyadi = "Savas", OgrenciNumarasi = 5000, SiniftaMi = true });
            Console.WriteLine("Öğreci Yoklama Sistemi");
            Console.WriteLine("İşlem Listesi: Seçim yapınız");
            Console.WriteLine("1.Öğrenci Listesini Göster");
            Console.WriteLine("2.Yoklama Al");
            Console.WriteLine("3.Gelmeyen Öğrenci Listesi");
            Console.WriteLine("4.Çıkış");

            while (true)
            {
                string cevap = Console.ReadLine();

                if (cevap == "Listeyi Göster")
                {

                    foreach (Ogrenci ogrenci in ogrenciListesi)
                    {
                        Console.WriteLine($" Öğrenci Adı: {ogrenci.OgrenciAdi} - Öğrenci Soyadı: {ogrenci.OgrenciSoyadi} - Öğrenci Numarası: {ogrenci.OgrenciNumarasi} - {ogrenci.SiniftaMi}");
                        string ogrenciAdi = Console.ReadLine();
                    }
                }
                else if (cevap == "Yoklama Al")
                {
                    Console.WriteLine("Öğrenci numarasını yazın:"); // yoklama alma işlemi öğrenci numarası istesin
                    string ogrenciNumarasiString = Console.ReadLine();

                    int ogrenciNumarasi = 0;
                    if (!int.TryParse(ogrenciNumarasiString, out ogrenciNumarasi))
                    {
                        Ogrenci ogrenci = ogrenciListesi.Find(o => o.OgrenciNumarasi == ogrenciNumarasi);
                        if (ogrenci != null)
                        {
                            ogrenci.SiniftaMi = true;
                            Console.WriteLine($"{ogrenci.OgrenciAdi} adlı öğrenci yoklama alındı ve sınıfta.");
                        }
                        else
                        {
                            Console.WriteLine("Geçersiz öğrenci numarası! Lütfen tekrar deneyin.");
                        }

                        Ogrenci Ogrenci = new();   // Sınıfı new^leyerek nesneye dönüştürüp bunun instansını oluşturmuş oluyoruz.
                        Ogrenci OgrenciAdi = ogrenciAdi;

                     
                    }

                    else
                    {
                        Console.WriteLine("Öğrenci Numarası bir sayı olmalıdır.");
                    }

                }





            }









        }
    }
}

public class Ogrenci
{
    public string OgrenciAdi;
    public string OgrenciSoyadi;
    public int OgrenciNumarasi;
    public bool SiniftaMi = false;

}

				